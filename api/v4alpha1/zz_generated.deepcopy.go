//go:build !ignore_autogenerated

/*
Copyright 2025.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v4alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudFlareAccessRules) DeepCopyInto(out *CloudFlareAccessRules) {
	*out = *in
	if in.Emails != nil {
		in, out := &in.Emails, &out.Emails
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EmailDomains != nil {
		in, out := &in.EmailDomains, &out.EmailDomains
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IPRanges != nil {
		in, out := &in.IPRanges, &out.IPRanges
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Countries != nil {
		in, out := &in.Countries, &out.Countries
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.LoginMethods != nil {
		in, out := &in.LoginMethods, &out.LoginMethods
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CommonNames != nil {
		in, out := &in.CommonNames, &out.CommonNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Everyone != nil {
		in, out := &in.Everyone, &out.Everyone
		*out = new(bool)
		**out = **in
	}
	if in.ValidCertificate != nil {
		in, out := &in.ValidCertificate, &out.ValidCertificate
		*out = new(bool)
		**out = **in
	}
	if in.AnyAccessServiceToken != nil {
		in, out := &in.AnyAccessServiceToken, &out.AnyAccessServiceToken
		*out = new(bool)
		**out = **in
	}
	if in.ServiceTokenRefs != nil {
		in, out := &in.ServiceTokenRefs, &out.ServiceTokenRefs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AccessGroupRefs != nil {
		in, out := &in.AccessGroupRefs, &out.AccessGroupRefs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.GoogleGroups != nil {
		in, out := &in.GoogleGroups, &out.GoogleGroups
		*out = make([]GoogleGroup, len(*in))
		copy(*out, *in)
	}
	if in.OktaGroups != nil {
		in, out := &in.OktaGroups, &out.OktaGroups
		*out = make([]OktaGroup, len(*in))
		copy(*out, *in)
	}
	if in.SAMLGroups != nil {
		in, out := &in.SAMLGroups, &out.SAMLGroups
		*out = make([]SAMLGroup, len(*in))
		copy(*out, *in)
	}
	if in.GithubOrganizations != nil {
		in, out := &in.GithubOrganizations, &out.GithubOrganizations
		*out = make([]GithubOrganization, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudFlareAccessRules.
func (in *CloudFlareAccessRules) DeepCopy() *CloudFlareAccessRules {
	if in == nil {
		return nil
	}
	out := new(CloudFlareAccessRules)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAccessApplication) DeepCopyInto(out *CloudflareAccessApplication) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAccessApplication.
func (in *CloudflareAccessApplication) DeepCopy() *CloudflareAccessApplication {
	if in == nil {
		return nil
	}
	out := new(CloudflareAccessApplication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudflareAccessApplication) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAccessApplicationList) DeepCopyInto(out *CloudflareAccessApplicationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CloudflareAccessApplication, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAccessApplicationList.
func (in *CloudflareAccessApplicationList) DeepCopy() *CloudflareAccessApplicationList {
	if in == nil {
		return nil
	}
	out := new(CloudflareAccessApplicationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudflareAccessApplicationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAccessApplicationSpec) DeepCopyInto(out *CloudflareAccessApplicationSpec) {
	*out = *in
	if in.AppLauncherVisible != nil {
		in, out := &in.AppLauncherVisible, &out.AppLauncherVisible
		*out = new(bool)
		**out = **in
	}
	if in.AllowedIdps != nil {
		in, out := &in.AllowedIdps, &out.AllowedIdps
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AutoRedirectToIdentity != nil {
		in, out := &in.AutoRedirectToIdentity, &out.AutoRedirectToIdentity
		*out = new(bool)
		**out = **in
	}
	if in.PolicyRefs != nil {
		in, out := &in.PolicyRefs, &out.PolicyRefs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.EnableBindingCookie != nil {
		in, out := &in.EnableBindingCookie, &out.EnableBindingCookie
		*out = new(bool)
		**out = **in
	}
	if in.HTTPOnlyCookieAttribute != nil {
		in, out := &in.HTTPOnlyCookieAttribute, &out.HTTPOnlyCookieAttribute
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAccessApplicationSpec.
func (in *CloudflareAccessApplicationSpec) DeepCopy() *CloudflareAccessApplicationSpec {
	if in == nil {
		return nil
	}
	out := new(CloudflareAccessApplicationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAccessApplicationStatus) DeepCopyInto(out *CloudflareAccessApplicationStatus) {
	*out = *in
	if in.ReusablePolicyIDs != nil {
		in, out := &in.ReusablePolicyIDs, &out.ReusablePolicyIDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	in.UpdatedAt.DeepCopyInto(&out.UpdatedAt)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAccessApplicationStatus.
func (in *CloudflareAccessApplicationStatus) DeepCopy() *CloudflareAccessApplicationStatus {
	if in == nil {
		return nil
	}
	out := new(CloudflareAccessApplicationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAccessGroup) DeepCopyInto(out *CloudflareAccessGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAccessGroup.
func (in *CloudflareAccessGroup) DeepCopy() *CloudflareAccessGroup {
	if in == nil {
		return nil
	}
	out := new(CloudflareAccessGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudflareAccessGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAccessGroupList) DeepCopyInto(out *CloudflareAccessGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CloudflareAccessGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAccessGroupList.
func (in *CloudflareAccessGroupList) DeepCopy() *CloudflareAccessGroupList {
	if in == nil {
		return nil
	}
	out := new(CloudflareAccessGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudflareAccessGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAccessGroupSpec) DeepCopyInto(out *CloudflareAccessGroupSpec) {
	*out = *in
	in.Include.DeepCopyInto(&out.Include)
	in.Require.DeepCopyInto(&out.Require)
	in.Exclude.DeepCopyInto(&out.Exclude)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAccessGroupSpec.
func (in *CloudflareAccessGroupSpec) DeepCopy() *CloudflareAccessGroupSpec {
	if in == nil {
		return nil
	}
	out := new(CloudflareAccessGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAccessGroupStatus) DeepCopyInto(out *CloudflareAccessGroupStatus) {
	*out = *in
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	in.UpdatedAt.DeepCopyInto(&out.UpdatedAt)
	in.ResolvedIdpsFromRefs.DeepCopyInto(&out.ResolvedIdpsFromRefs)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAccessGroupStatus.
func (in *CloudflareAccessGroupStatus) DeepCopy() *CloudflareAccessGroupStatus {
	if in == nil {
		return nil
	}
	out := new(CloudflareAccessGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAccessReusablePolicy) DeepCopyInto(out *CloudflareAccessReusablePolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAccessReusablePolicy.
func (in *CloudflareAccessReusablePolicy) DeepCopy() *CloudflareAccessReusablePolicy {
	if in == nil {
		return nil
	}
	out := new(CloudflareAccessReusablePolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudflareAccessReusablePolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAccessReusablePolicyList) DeepCopyInto(out *CloudflareAccessReusablePolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CloudflareAccessReusablePolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAccessReusablePolicyList.
func (in *CloudflareAccessReusablePolicyList) DeepCopy() *CloudflareAccessReusablePolicyList {
	if in == nil {
		return nil
	}
	out := new(CloudflareAccessReusablePolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudflareAccessReusablePolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAccessReusablePolicySpec) DeepCopyInto(out *CloudflareAccessReusablePolicySpec) {
	*out = *in
	in.Include.DeepCopyInto(&out.Include)
	in.Require.DeepCopyInto(&out.Require)
	in.Exclude.DeepCopyInto(&out.Exclude)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAccessReusablePolicySpec.
func (in *CloudflareAccessReusablePolicySpec) DeepCopy() *CloudflareAccessReusablePolicySpec {
	if in == nil {
		return nil
	}
	out := new(CloudflareAccessReusablePolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareAccessReusablePolicyStatus) DeepCopyInto(out *CloudflareAccessReusablePolicyStatus) {
	*out = *in
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	in.UpdatedAt.DeepCopyInto(&out.UpdatedAt)
	in.ResolvedIdpsFromRefs.DeepCopyInto(&out.ResolvedIdpsFromRefs)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareAccessReusablePolicyStatus.
func (in *CloudflareAccessReusablePolicyStatus) DeepCopy() *CloudflareAccessReusablePolicyStatus {
	if in == nil {
		return nil
	}
	out := new(CloudflareAccessReusablePolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareServiceToken) DeepCopyInto(out *CloudflareServiceToken) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareServiceToken.
func (in *CloudflareServiceToken) DeepCopy() *CloudflareServiceToken {
	if in == nil {
		return nil
	}
	out := new(CloudflareServiceToken)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudflareServiceToken) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareServiceTokenList) DeepCopyInto(out *CloudflareServiceTokenList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CloudflareServiceToken, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareServiceTokenList.
func (in *CloudflareServiceTokenList) DeepCopy() *CloudflareServiceTokenList {
	if in == nil {
		return nil
	}
	out := new(CloudflareServiceTokenList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudflareServiceTokenList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareServiceTokenSpec) DeepCopyInto(out *CloudflareServiceTokenSpec) {
	*out = *in
	in.Template.DeepCopyInto(&out.Template)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareServiceTokenSpec.
func (in *CloudflareServiceTokenSpec) DeepCopy() *CloudflareServiceTokenSpec {
	if in == nil {
		return nil
	}
	out := new(CloudflareServiceTokenSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudflareServiceTokenStatus) DeepCopyInto(out *CloudflareServiceTokenStatus) {
	*out = *in
	in.CreatedAt.DeepCopyInto(&out.CreatedAt)
	in.UpdatedAt.DeepCopyInto(&out.UpdatedAt)
	in.ExpiresAt.DeepCopyInto(&out.ExpiresAt)
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(SecretRef)
		**out = **in
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudflareServiceTokenStatus.
func (in *CloudflareServiceTokenStatus) DeepCopy() *CloudflareServiceTokenStatus {
	if in == nil {
		return nil
	}
	out := new(CloudflareServiceTokenStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubOrganization) DeepCopyInto(out *GithubOrganization) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubOrganization.
func (in *GithubOrganization) DeepCopy() *GithubOrganization {
	if in == nil {
		return nil
	}
	out := new(GithubOrganization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GoogleGroup) DeepCopyInto(out *GoogleGroup) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GoogleGroup.
func (in *GoogleGroup) DeepCopy() *GoogleGroup {
	if in == nil {
		return nil
	}
	out := new(GoogleGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OktaGroup) DeepCopyInto(out *OktaGroup) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OktaGroup.
func (in *OktaGroup) DeepCopy() *OktaGroup {
	if in == nil {
		return nil
	}
	out := new(OktaGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResolvedCloudflareIDs) DeepCopyInto(out *ResolvedCloudflareIDs) {
	*out = *in
	if in.AccessGroupRefCfIds != nil {
		in, out := &in.AccessGroupRefCfIds, &out.AccessGroupRefCfIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ServiceTokenRefCfIds != nil {
		in, out := &in.ServiceTokenRefCfIds, &out.ServiceTokenRefCfIds
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResolvedCloudflareIDs.
func (in *ResolvedCloudflareIDs) DeepCopy() *ResolvedCloudflareIDs {
	if in == nil {
		return nil
	}
	out := new(ResolvedCloudflareIDs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RulerResolvedCloudflareIDs) DeepCopyInto(out *RulerResolvedCloudflareIDs) {
	*out = *in
	in.Include.DeepCopyInto(&out.Include)
	in.Require.DeepCopyInto(&out.Require)
	in.Exclude.DeepCopyInto(&out.Exclude)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RulerResolvedCloudflareIDs.
func (in *RulerResolvedCloudflareIDs) DeepCopy() *RulerResolvedCloudflareIDs {
	if in == nil {
		return nil
	}
	out := new(RulerResolvedCloudflareIDs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SAMLGroup) DeepCopyInto(out *SAMLGroup) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SAMLGroup.
func (in *SAMLGroup) DeepCopy() *SAMLGroup {
	if in == nil {
		return nil
	}
	out := new(SAMLGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretRef) DeepCopyInto(out *SecretRef) {
	*out = *in
	out.LocalObjectReference = in.LocalObjectReference
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretRef.
func (in *SecretRef) DeepCopy() *SecretRef {
	if in == nil {
		return nil
	}
	out := new(SecretRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretTemplateSpec) DeepCopyInto(out *SecretTemplateSpec) {
	*out = *in
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretTemplateSpec.
func (in *SecretTemplateSpec) DeepCopy() *SecretTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(SecretTemplateSpec)
	in.DeepCopyInto(out)
	return out
}
