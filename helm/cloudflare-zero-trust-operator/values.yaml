# Default values for cloudflare-zero-trust-operator.

# replicaCount -- number of replicas to run
replicaCount: 1

image:
  # image.repository -- manager image repo
  repository: ghcr.io/bojanzelic/cloudflare-zero-trust-operator
  # image.pullPolicy -- manager pullPolicy
  pullPolicy: IfNotPresent
  # image.tag -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

# provide the cloudflare creds
# cloudflare_account_id -- Cloudflare Account ID - required (or set secretRef)
cloudflare_account_id: ""

# cloudflare_api_key -- API Key from cloudflare - required (one of cloudflare_api_token or cloudflare_api_key + cloudflare_api_email) (or set secretRef)
cloudflare_api_key: ""
# cloudflare_api_email -- Cloudflare API Email - required (one of cloudflare_api_token or cloudflare_api_key + cloudflare_api_email) (or set secretRef)
cloudflare_api_email: ""
# cloudflare_api_token -- Cloudflare API Token - required (one of cloudflare_api_token or cloudflare_api_key + cloudflare_api_email) (or set secretRef)
cloudflare_api_token: ""

# secretRef -- name of the secret that contains the following keys:
# CLOUDFLARE_ACCOUNT_ID, CLOUDFLARE_API_KEY, CLOUDFLARE_API_EMAIL, CLOUDFLARE_API_TOKEN
secretRef: ""

# imagePullSecrets -- config reference for pulling containers
imagePullSecrets: []
# nameOverride -- override name for helm chart
nameOverride: ""
# fullnameOverride -- override name for helm chart
fullnameOverride: ""

serviceAccount:
  # serviceAccount.create -- Specifies whether a service account should be created
  create: true
  # serviceAccount.annotations -- Annotations to add to the service account
  annotations: {}
  # serviceAccount.name -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# podAnnotations -- annotations to add to the pod
podAnnotations: {}

service:
  # service.type -- type of service
  type: ClusterIP
  # service.port -- port of service
  port: 8443

manager:
  # manager.resources -- limits & requests(cpu & memory) to apply to the manager container
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 128Mi
    # requests:
    #   cpu: 10m
    #   memory: 64Mi

proxy:
  # proxy.resources -- limits & requests(cpu & memory) to apply to the manager container
  resources: {}
    # limits:
    #   cpu: 500m
    #   memory: 128Mi
    # requests:
    #   cpu: 10m
    #   memory: 64Mi